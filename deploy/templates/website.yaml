apiVersion: apps/v1
kind: Deployment
metadata:
  name: 'website'
spec:
  replicas: 2
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      nodeSelector:
        workload: assets
      {{- with .Values.imagePullSecret }}
      imagePullSecrets:
        - name: {{ . }}
      {{- end }}
      containers:
        - name: server
          image: "ghcr.io/appwrite/website:{{ .Values.version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: config
          env:
          {{- range $key, $val := .Values.env }}
            - name: {{ $key }}
              value: "{{ $val }}"
          {{- end }}
          ports:
            - containerPort: 3000

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: 'website'
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: 'website'
  minReplicas: {{ .Values.minReplicas }}
  maxReplicas: {{ .Values.maxReplicas }}
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: 'website'
    namespace: {{ .Release.Namespace }}
    annotations:
        kubernetes.io/ingress.class: traefik
        traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
        traefik.ingress.kubernetes.io/router.tls: 'true'
        traefik.ingress.kubernetes.io/router.tls.certresolver: myresolver
spec:
    rules:
        - host: {{ .Values.domain }}
          http:
              paths:
                  - path: /
                    pathType: Prefix
                    backend:
                        service:
                            name: 'website'
                            port:
                                number: 80


---

apiVersion: v1
kind: Service
metadata:
  name: 'website'
spec:
  selector:
    app: server
  ports:
    - name: http
      port: 80
      targetPort: 3000
