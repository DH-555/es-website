apiVersion: apps/v1
kind: Deployment
metadata:
  name: website
spec:
  replicas: 2
  strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      nodeSelector:
        workload: assets
{{- with .Values.imagePullSecret }}
      imagePullSecrets:
        - name: {{ . }}
{{- end }}
      containers:
        - name: server
          image: "ghcr.io/appwrite/website:{{ .Values.version }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          resources:
            requests:
              cpu: 800m
              memory: 800Mi
            limits:
              cpu: 1000m
              memory: 1024Mi
{{- if .Values.env }}
          env:
{{- range $key, $val := .Values.env }}
            - name: {{ $key }}
              value: "{{ $val }}"
{{- end }}
{{- end }}
          ports:
            - containerPort: 3000
          livenessProbe:
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            periodSeconds: 3
            timeoutSeconds: 3
            failureThreshold: 5
            successThreshold: 1
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds | default 10 }}
          readinessProbe:
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            periodSeconds: 3
            timeoutSeconds: 3
            failureThreshold: 5
            successThreshold: 5
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds | default 10 }}

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: 'website'
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: 'website'
  minReplicas: {{ .Values.minReplicas }}
  maxReplicas: {{ .Values.maxReplicas }}
  metrics:
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70

---

apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: website
spec:
  parentRefs:
    - name: website
  rules:
    - backendRefs:
        - name: website
          port: 80

---

apiVersion: v1
kind: Service
metadata:
  name: 'website'
spec:
  selector:
    app: server
  ports:
    - name: http
      port: 80
      targetPort: 3000

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: website
spec:
  maxUnavailable: {{ .Values.maxUnavailable }}
  selector:
    matchLabels:
      app: server
