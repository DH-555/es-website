.prose {
    color: var(--color-secondary);
    font-size: var(--font-size-small);
    line-height: var(--leading-sm);
    letter-spacing: var(--tracking-tight);

    h2:where(:not(.not-prose, .not-prose *)) {
        font-size: var(--font-size-medium);
        line-height: var(--leading-md);
        letter-spacing: var(--tracking-tighter);
        color: var(--color-primary);
        margin-top: calc(var(--spacing) * 14);

        @variant md {
            font-size: var(--font-size-xl);
        }
    }

    h3:where(:not(.not-prose, .not-prose *)) {
        font-size: var(--font-size-large);
        line-height: var(--leading-sm);
        font-weight: var(--font-weight-medium);
        margin-top: calc(var(--spacing) * 12);
    }

    h2 + h3:where(:not(.not-prose, .not-prose *)) {
        margin-top: calc(var(--spacing) * 6);
    }

    h4:where(:not(.not-prose, .not-prose *)) {
        font-size: var(--font-size-medium);
        line-height: var(--leading-xs);
        font-weight: var(--font-weight-medium);
        margin-top: calc(var(--spacing) * 3);
    }

    h5:where(:not(.not-prose, .not-prose *)) {
        font-size: var(--font-size-small);
        line-height: var(--leading-xs);
        margin-top: calc(var(--spacing) * 3);
        font-weight: var(--font-weight-medium);
    }

    h6:where(:not(.not-prose, .not-prose *)) {
        font-size: var(--font-size-tiny);
        line-height: var(--leading-tiny);
        font-weight: var(--font-weight-medium);
        margin-top: calc(var(--spacing) * 3);
    }

    :is(h2, h3, h4, h5, h6):where(:not(.not-prose, .not-prose *)) {
        scroll-margin-top: calc(var(--spacing) * 32);
        color: var(--color-primary);
        text-wrap: balance;
        font-weight: var(--font-weight-medium);
    }

    p:where(:not(.not-prose, .not-prose *)) {
        margin-top: calc(var(--spacing) * 6);
        text-wrap: pretty;
    }

    h2 + p:where(:not(.not-prose, .not-prose *)) {
        margin-top: calc(var(--spacing) * 4);
    }

    h3 + p:where(:not(.not-prose, .not-prose *)) {
        margin-top: calc(var(--spacing) * 3);
    }

    h4 + p:where(:not(.not-prose, .not-prose *)) {
        margin-top: calc(var(--spacing) * 2.5);
    }

    ol:where(:not(.not-prose, .not-prose *)) {
        margin-block: calc(var(--spacing) * 8);
        counter-reset: numeric-list;
        display: flex;
        flex-direction: column;
    }

    ol li:where(:not(.not-prose, .not-prose *)) {
        margin-block: calc(var(--spacing) * 1);
        display: inline-flex;

        &:before {
            counter-increment: numeric-list;
            content: counter(numeric-list);
            align-self: start;
            padding-inline-end: 0.75rem;
            color: var(--color-primary);
        }
    }

    ol li + li:where(:not(.not-prose, .not-prose *)) {
        margin-top: calc(var(--spacing) * 1);
        display: inline-block;
    }

    ol li:where(:not(.not-prose, .not-prose *))::marker {
        font-weight: 600;
        color: var(--prose-strong-color);
    }

    ul:where(:not(.not-prose, .not-prose *)) {
        margin-block: calc(var(--spacing) * 8);
        list-style-type: disc;
        padding-left: calc(var(--spacing) * 3);
    }

    ul li:where(:not(.not-prose, .not-prose *)) {
        margin-block: calc(var(--spacing) * 1);
        margin-inline-start: calc(var(--spacing) * 2);
        padding-inline-start: calc(var(--spacing) * 1);
    }

    ul li:where(:not(.not-prose, .not-prose *))::marker {
        color: var(--color-accent);
    }

    a:not(:where(:is(h2, h3, h4, h5, h6) *)):where(:not(.not-prose, .not-prose *)) {
        font-weight: var(--font-weight-medium);
        text-decoration: underline;
        text-decoration-thickness: 0.75px;
        text-decoration-color: var(--color-smooth);
        text-underline-offset: 0.375rem;
        letter-spacing: var(--tracking-tight);
        color: var(--color-primary);
        transition: all 200ms ease-in-out;
    }

    a:not(:where(:is(h2, h3, h4, h5, h6) *)):hover:where(:not(.not-prose, .not-prose *)) {
        color: var(--color-accent-darker);
        text-decoration-color: var(--color-accent-darker);
    }

    a:not(:where(:is(h2, h3, h4, h5, h6) *)):active:where(:not(.not-prose, .not-prose *)) {
        color: var(--color-accent);
        text-decoration-color: var(--color-accent);
    }

    a:where(:not(.not-prose, .not-prose *)):has(> [data-media]) {
        display: block;
    }

    strong:where(:not(.not-prose, .not-prose *)) {
        color: var(--color-primary);
        font-weight: var(--font-weight-medium);
    }

    code:where(:not(.not-prose, .not-prose *)) {
        font-family: var(--font-fira-code);
        font-size: var(--font-size-tiny);
        line-height: var(--leading-tiny);
        letter-spacing: var(--tracking-loose);
        color: var(--color-secondary);
        background-color: var(--color-smooth);
        border: 1px solid var(--color-offset);
        border-radius: var(--radius-md);
        padding: calc(var(--spacing) * 0) calc(var(--spacing) * 0.75);
    }

    :where(h2, h3, h4, h5, h6) code:where(:not(.not-prose, .not-prose *)) {
        font-weight: var(--font-weight-medium);
    }

    table:where(:not(.not-prose, .not-prose *)) {
        width: 100%;
        table-layout: auto;
        margin-block: calc(var(--spacing) * 8);
        font-size: var(--font-size-small);
        line-height: 1.4;
    }

    thead:where(:not(.not-prose, .not-prose *)) {
        border-bottom-width: 1px;
        border-bottom-color: var(--prose-th-borders);
    }

    thead th:where(:not(.not-prose, .not-prose *)) {
        color: var(--prose-heading-color);
        font-weight: 600;
        vertical-align: bottom;
        padding-inline-end: 0.6em;
        padding-bottom: 0.8em;
        padding-inline-start: 0.6em;
    }

    thead th:first-child:where(:not(.not-prose, .not-prose *)) {
        //padding-inline-start: 0;
    }

    thead th:last-child:where(:not(.not-prose, .not-prose *)) {
        //padding-inline-end: 0;
    }

    tbody tr:where(:not(.not-prose, .not-prose *)) {
        border-bottom-width: 1px;
        border-bottom-color: var(--prose-td-borders);
    }

    tbody tr:last-child:where(:not(.not-prose, .not-prose *)) {
        border-bottom-width: 0;
    }

    tbody td:where(:not(.not-prose, .not-prose *)) {
        vertical-align: baseline;
    }

    tfoot:where(:not(.not-prose, .not-prose *)) {
        border-top-width: 1px;
        border-top-color: var(--prose-th-borders);
    }

    tfoot td:where(:not(.not-prose, .not-prose *)) {
        vertical-align: top;
    }

    tbody td:where(:not(.not-prose, .not-prose *)),
    tfoot td:where(:not(.not-prose, .not-prose *)) {
        padding-top: 0.8em;
        padding-inline-end: 0.6em;
        padding-bottom: 0.8em;
        padding-inline-start: 0.6em;
    }

    tbody td:first-child:where(:not(.not-prose, .not-prose *)),
    tfoot td:first-child:where(:not(.not-prose, .not-prose *)) {
        //padding-inline-start: 0;
    }

    tbody td:last-child:where(:not(.not-prose, .not-prose *)),
    tfoot td:last-child:where(:not(.not-prose, .not-prose *)) {
        //padding-inline-end: 0;
    }

    th:where(:not(.not-prose, .not-prose *)),
    td:where(:not(.not-prose, .not-prose *)) {
        text-align: start;
    }

    td code:where(:not(.not-prose, .not-prose *)) {
        font-size: 0.8125rem;
    }

    hr:where(:not(.not-prose, .not-prose *)) {
        border-color: var(--prose-hr-color);
        margin-block: --spacing(16);
        & + h2 {
            margin-top: --spacing(16);
        }
    }

    blockquote:where(:not(.not-prose, .not-prose *)) {
        border-inline-start-width: 0.0625rem;
        border-inline-start-color: var(--color-accent);
        padding-inline-start: calc(var(--spacing) * 5);
        margin-inline-end: calc(var(--spacing) * 30);
        color: var(--color-primary);
        font-size: var(--font-size-large);
        font-weight: var(--font-weight-medium);
    }

    blockquote:where(:not(.not-prose, .not-prose *)) p:first-of-type::before {
        content: open-quote;
    }

    blockquote:where(:not(.not-prose, .not-prose *)) p:last-of-type::after {
        content: close-quote;
    }

    figure:where(:not(.not-prose, .not-prose *)) {
        margin-block: calc(var(--spacing) * 8);

        figcaption:where(:not(.not-prose, .not-prose *)) {
            font-size: var(--font-size-tiny);
            line-height: var(--leading-tiny);
            letter-spacing: var(--tracking-tight);
        }
    }

    :first-child:where(:not(.not-prose, .not-prose *)) {
        margin-top: 0;
    }

    :last-child:where(:not(.not-prose, .not-prose *)) {
        margin-bottom: 0;
    }
}

.prose-large {
    font-size: var(--font-size-medium);
    line-height: var(--leading-md);

    code:where(:not(.not-prose, .not-prose *)) {
        font-size: var(--font-size-small);
    }
}
